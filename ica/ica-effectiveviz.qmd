---
title: "Effective Viz"
execute: 
  echo: true 
  warning: false
  error: false 
  code-fold: true 
---

Exercise #1: Professionalism 

```{r}
# Load tidyverse package for plotting and wrangling
library(tidyverse)

# Import the data
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv") |> 
  mutate(date = as.Date(date))
```

```{r}
ggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + 
  geom_point()
```
The following plot is fine for things like homework or just playing around. But we’ll make it more “professional” looking below.

```{r}
#Part A
ggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) +
  geom_point() +
  labs(
    title = "Afternoon vs. Morning Temperature in Three Australian Locations",
    x = "Temperature at 9 AM (°C)",
    y = "Temperature at 3 PM (°C)",
    color = "Location")
```

The updated viz enhances the professionalism and clarity of the initial scatter plot. A concise title, labelling the x-axis and y-axis, making the variable meanings and their units explicit. Finally, I capitalised “Location” on the  legend title.



```{r}
#Part B
#| fig-cap: "Scatter plot showing the relationship between 9 AM and 3 PM temperatures (°C) across Hobart, Uluru, and Wollongong."

#Creat Viz
ggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) +
  geom_point() +
  labs(
    x = "Temperature at 9 AM (°C)",
    y = "Temperature at 3 PM (°C)",
    color = "Location")
```

It's important to use a detailed fig-cap right up top in the document's header. That way, the explanation of the figure is separate from the labels I put right on the plot using labs(). This makes the whole document cleaner and easier for everyone to understand, way more so than just slapping a title on the graph."
