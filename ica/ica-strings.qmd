---
title: "Strings"
execute: 
  echo: true 
  warning: false
  error: false 
  code-fold: true 
---

```{r}
#Load Libraries
library(dplyr)
library(tidyr)
library(stringr)

#Load Data
courses <- read.csv("https://mac-stat.github.io/data/registrar.csv")

# Check it out
head(courses)
```

```{r}
# Construct a table that indicates the number of classes offered in each day/time slot
# Print only the 6 most popular time slots
courses |> 
  count(days, time) |> 
  arrange(desc(n)) |> 
  head()
```

Exercise #2: Prep the Data

```{r}
#Clean and Transform Course Enrollment Data
courses_clean <- courses |> 
  separate(avail_max, c("avail", "max"), sep = " / ") |> 
  mutate(enroll = as.numeric(max) - as.numeric(avail)) |> 
  separate(number, c("dept", "number", "section"))
  
head(courses_clean)
```

Exercise 3: Courses offered by department

```{r}
# Identify the 6 departments that offered the most sections
courses_clean |> 
  count(dept) |> 
  arrange(desc(n)) |> 
  head()
```

```{r}
# Identify the 6 departments with the longest average course titles
courses_clean |> 
  mutate(length = str_length(name)) |> 
  group_by(dept) |> 
  summarize(avg_length = mean(length)) |> 
  arrange(desc(avg_length)) |> 
  head()
```

Exercise 4: STAT Courses

```{r}
#Part A
courses_clean |> 
  filter(str_detect(instructor, "Alicia Johnson")) 
```

```{r}
#Part B
stat <- courses_clean |> 
  filter(dept == "STAT") |> 
  mutate(name = str_replace(name, "Introduction to ", "")) |>
  mutate(name = str_replace(name, "Statistical", "Stat")) |> 
  mutate(start_time = str_sub(time, 1, 5)) |> 
  select(number, name, start_time, enroll)

stat
```

Exercise 5: More Cleaning

```{r}
#Filter Course Enrollments
enrollments <- courses_clean |> 
  filter(dept != "PE", dept != "INTD") |> 
  filter(!(dept == "MUSI" & as.numeric(number) < 100)) |> 
  filter(!(dept == "THDA" & as.numeric(number) < 100)) |> 
  filter(!str_detect(section, "L"))
  
head(enrollments)
```








